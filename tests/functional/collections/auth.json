{
  "info": {
    "_postman_id": "2082271b-2b26-40e4-b7dd-4119ac04587c",
    "name": "CLIN-PROXY-API Auth",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Service Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Should be able to retrieve service health status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql('Ok');",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}/health",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}",
            "health"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Service Documentation",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Should be able to retrieve service documentation\", function () {",
              "    var htmlDoc = pm.response.text();",
              "    pm.expect(htmlDoc).to.contain('src/services/api/auth/docs.yaml');",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}/docs",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}",
            "docs"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Invalid POST Login Data",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Should not be able to login using invalid username or password\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.error).to.eql('BadRequest');",
              "});",
              "",
              "pm.test(\"Unsuccessful login response should include error inforation\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.messages).to.be.a('array');",
              "    pm.expect(jsonData.data.messages).to.include(\"\\\"username\\\" is not allowed to be empty\");",
              "    pm.expect(jsonData.data.messages).to.include(\"\\\"username\\\" must be a valid email\");",
              "    pm.expect(jsonData.data.messages).to.include(\"\\\"password\\\" is not allowed to be empty\");",
              "    pm.expect(jsonData.data.messages).to.include(\"\\\"password\\\" length must be at least 1 characters long\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "username",
              "value": "",
              "type": "text"
            },
            {
              "key": "password",
              "value": "",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Valid POST Login Data",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Should be able to login using a valid username and password\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql('Ok');",
              "});",
              "",
              "pm.test(\"Successful login response shoud include user information\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.username).to.eql(environment[\"username\"]);",
              "});",
              "",
              "pm.test(\"Successful login response shoud include user groups\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.groups).to.be.a('array');",
              "});",
              "",
              "pm.test(\"Successful login response shoud include user roles\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.roles).to.be.a('array');",
              "    pm.expect(jsonData.data.user.roles).to.not.equal([]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "username",
              "value": "{{username}}",
              "type": "text"
            },
            {
              "key": "password",
              "value": "{{password}}",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Authorized User Information Query",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Should be able to retrieve authorized user information\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql('Ok');",
              "});",
              "",
              "pm.test(\"Retrieved user information should include user information\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.username).to.eql(environment[\"username\"]);",
              "});",
              "",
              "pm.test(\"Retrieved user information should include include user groups\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.groups).to.be.a('array');",
              "});",
              "",
              "pm.test(\"Successful login response shoud include user roles\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.roles).to.be.a('array');",
              "    pm.expect(jsonData.data.user.roles).to.not.equal([]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Authorized User Expired Token Refresh",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Authorized user should be able to refresh access token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql('Created');",
              "});",
              "",
              "pm.test(\"Successful token refresh response should include user information\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.username).to.eql(environment[\"username\"]);",
              "});",
              "",
              "pm.test(\"Successful token refresh response should include include user groups\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.groups).to.be.a('array');",
              "});",
              "",
              "pm.test(\"Successful token refresh response should include user roles\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.user.roles).to.be.a('array');",
              "    pm.expect(jsonData.data.user.roles).to.not.equal([]);",
              "});",
              "",
              "pm.test(\"Successful token refresh response should include token value\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.token.value).to.not.equal(null);",
              "});",
              "",
              "pm.test(\"Successful token refresh response should include token expiry\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.token.expiry).to.not.equal(null);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}/token",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}",
            "token"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Authorized User Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Authorized user should be able to logout\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.eql('Ok');",
              "});",
              "",
              "pm.test(\"Successful logout response should not contain any information\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.eql({});",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    },
    {
      "name": "Unauthorized User Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69233566-12b5-475d-927c-1be10b6b6543",
            "exec": [
              "pm.test(\"Unauthorized user should not be able to logout\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.error).to.eql('Unauthorized');",
              "});",
              "",
              "pm.test(\"Unsuccessful logout response should return error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.messages).to.be.a('array');",
              "    pm.expect(jsonData.data.messages).to.contain('No authorization token was found');",
              "});",
              "",
              "pm.test(\"Unsuccessful logout response should not contain any information\", function () {",
              "    var jsonData = pm.response.json();",
              "    delete jsonData.data.messages;",
              "    pm.expect(jsonData.data).to.eql({});",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": []
        },
        "url": {
          "raw": "{{hostname}}:{{port}}/{{path}}",
          "host": [
            "{{hostname}}"
          ],
          "port": "{{port}}",
          "path": [
            "{{path}}"
          ]
        }
      },
      "response": [
        {
          "name": "API Version",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{hostname}}:{{port}}/{{path}}/health",
              "host": [
                "{{hostname}}"
              ],
              "port": "{{port}}",
              "path": [
                "{{path}}",
                "health"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "restify"
            },
            {
              "key": "API-Version",
              "value": "1"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 24 Apr 2019 18:47:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookie": [],
          "body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
        }
      ]
    }
  ]
}
