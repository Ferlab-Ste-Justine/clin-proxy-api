{
	"info": {
		"_postman_id": "a065eda9-2e89-4e62-a3a5-1ec317432ba9",
		"name": "CLIN-PROXY-API Gene",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Service Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d28c2066-2b74-43f4-ab8a-0d25ee541192",
						"exec": [
							"pm.test(\"Should be able to retrieve service health status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Ok');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{hostname}}:{{port}}/{{path}}/health",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{path}}",
						"health"
					]
				}
			},
			"response": [
				{
					"name": "API Version",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}:{{port}}/{{path}}/health",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{path}}",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "restify"
						},
						{
							"key": "API-Version",
							"value": "1"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 24 Apr 2019 18:47:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
				}
			]
		},
		{
			"name": "Service Documentation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7340066b-21af-48e0-994c-df6ea5f1fa31",
						"exec": [
							"pm.test(\"Should be able to retrieve service documentation\", function () {",
							"    var htmlDoc = pm.response.text();",
							"    pm.expect(htmlDoc).to.contain('Redoc.init');",
							"    pm.expect(htmlDoc).to.contain(environment['hostname']);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{hostname}}:{{port}}/{{path}}/docs",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{path}}",
						"docs"
					]
				}
			},
			"response": [
				{
					"name": "API Version",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}:{{port}}/{{path}}/health",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{path}}",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "restify"
						},
						{
							"key": "API-Version",
							"value": "1"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 24 Apr 2019 18:47:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
				}
			]
		},
		{
			"name": "Set-up: Authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c878bd07-ed6f-467e-b649-1b6bb95eb38a",
						"exec": [
							"pm.test(\"Should be able to login to complete the remaining tests\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Ok');",
							"    pm.expect(jsonData.data.user.username).to.eql(environment['authUsername']);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{authUsername}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{authPassword}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{authHostname}}:{{authPort}}/{{authPath}}",
					"host": [
						"{{authHostname}}"
					],
					"port": "{{authPort}}",
					"path": [
						"{{authPath}}"
					]
				}
			},
			"response": [
				{
					"name": "API Version",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}:{{port}}/{{path}}/health",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{path}}",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "restify"
						},
						{
							"key": "API-Version",
							"value": "1"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 24 Apr 2019 18:47:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
				}
			]
		},
		{
			"name": "Autocomplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df6f7913-3ee2-4df0-8644-0e08a22e136d",
						"exec": [
							"pm.test(\"Should return correct status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Should return correct response format\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Ok');",
							"    pm.expect(jsonData.error).to.eql(undefined);",
							"    pm.expect(jsonData.data).to.not.eql(undefined);",
							"});",
							"",
							"pm.test(\"Should return correct data structure on queried data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.total).to.be.a('number');",
							"    pm.expect(jsonData.data.hits).to.be.a('array');",
							"});",
							"",
							"pm.test(\"Should return correct information on queried data\", function () {",
							"    var jsonData = pm.response.json();",
							"    // since _score change from query to query, we're going to test for the important part of the answer",
							"    pm.expect(JSON.stringify(jsonData.data.hits[0]._source)).to.equal(JSON.stringify(",
							"        {\"geneSymbol\": \"BRAF\"}",
							"    ));",
							"    pm.expect(JSON.stringify(jsonData.data.hits[0].highlight)).to.equal(JSON.stringify(",
							"        {",
							"            \"alias\": [",
							"                \"{{Braf}}\",",
							"                \"{{BRAF1}}\"",
							"            ],",
							"            \"geneSymbol\": [",
							"                \"{{BRAF}}\"",
							"            ]",
							"        }",
							"    ));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{hostname}}:{{port}}/{{path}}/autocomplete?type=partial&query={{geneQuery}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"{{path}}",
						"autocomplete"
					],
					"query": [
						{
							"key": "type",
							"value": "partial"
						},
						{
							"key": "query",
							"value": "{{geneQuery}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "API Version",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostname}}:{{port}}/{{path}}/health",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"{{path}}",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "restify"
						},
						{
							"key": "API-Version",
							"value": "1"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 24 Apr 2019 18:47:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": 1556131651911,\n    \"message\": \"Ok\",\n    \"data\": {\n        \"uid\": \"33vecfmgrojuvki5jb\",\n        \"cuid\": \"33vecfmgrojuvki5j8\",\n        \"packageVersion\": \"1.1.0\",\n        \"defaultApiVersion\": 1,\n        \"currentApiVersion\": 1,\n        \"apiVersions\": [\n            1\n        ],\n        \"uptime\": 172918,\n        \"served\": 4\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "496cfa86-6e87-4a27-9670-be614d05fc65",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "958e28d0-f546-4cc8-b629-b586386fd2bd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}