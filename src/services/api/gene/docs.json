{
  "openapi": "3.0.0",
  "info": {
    "version": "1.x",
    "title": "Gene API Service",
    "description": "Gene API Service; This service is available to everyone that have a valid JWT token from the Auth Service.\n",
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://github.com/cr-ste-justine/clin-proxy-api/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://localhost:5002",
      "description": "Localhost"
    },
    {
      "url": "https://clin.cr-ste-justine.xyz/api",
      "description": "QA"
    }
  ],
  "paths": {
    "/gene/health": {
      "get": {
        "tags": [
          "Service Health Check"
        ],
        "summary": "Returns the health status of the service.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/gene/autocomplete": {
      "get": {
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": [
          "Gene Query"
        ],
        "summary": "Returns the result of the gene query with highligh",
        "description": "execute query on gene index based on geneSymbol, alias, ensemblId, name, omim, hgnc and NCBI's geneId.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "the 'Query' parameter",
            "schema": {
              "type": "string",
              "minimum": 2
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "return simpler, i.e. 'partial' result or default",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    },
    "schemas": {
      "Health": {
        "title": "Health Check",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "example": {
          "timestamp": 1553284037677,
          "message": "Ok",
          "data": {}
        }
      },
      "Error500": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "error": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "example": {
          "timestamp": 1587403307565,
          "error": "InternalError",
          "data": {
            "messages": [
              "Halp! I has error."
            ]
          }
        }
      },
      "Error401": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "error": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "example": {
          "timestamp": 1587403307565,
          "error": "Unauthorized",
          "data": {
            "messages": [
              "Halp! I has the forgottenz."
            ]
          }
        }
      }
    }
  }
}
